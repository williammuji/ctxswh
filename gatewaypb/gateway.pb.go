// Code generated by protoc-gen-go.
// source: gateway.proto
// DO NOT EDIT!

/*
Package gatewaypb is a generated protocol buffer package.

It is generated from these files:
	gateway.proto

It has these top-level messages:
	GatewayRequest
	GatewayResponse
	LoginRequest
	LoginResponse
	PingpongData
	SubRequest
	UnsubRequest
	PubRequest
	PubResponse
*/
package gatewaypb

import (
	"fmt"

	proto "github.com/golang/protobuf/proto"

	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LoginResponse_Status int32

const (
	LoginResponse_SUCCESS                  LoginResponse_Status = 0
	LoginResponse_INCORRECT_ACCOUNT_PASSWD LoginResponse_Status = 1
	LoginResponse_AUTH_SERVER_MAINTAIN     LoginResponse_Status = 2
	LoginResponse_MYSQL_MAINTAIN           LoginResponse_Status = 3
)

var LoginResponse_Status_name = map[int32]string{
	0: "SUCCESS",
	1: "INCORRECT_ACCOUNT_PASSWD",
	2: "AUTH_SERVER_MAINTAIN",
	3: "MYSQL_MAINTAIN",
}
var LoginResponse_Status_value = map[string]int32{
	"SUCCESS":                  0,
	"INCORRECT_ACCOUNT_PASSWD": 1,
	"AUTH_SERVER_MAINTAIN":     2,
	"MYSQL_MAINTAIN":           3,
}

func (x LoginResponse_Status) String() string {
	return proto.EnumName(LoginResponse_Status_name, int32(x))
}
func (LoginResponse_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

type GatewayRequest struct {
	// Types that are valid to be assigned to MessageRequest:
	//	*GatewayRequest_LoginRequest
	//	*GatewayRequest_PingpongRequest
	//	*GatewayRequest_SubRequest
	//	*GatewayRequest_UnsubRequest
	//	*GatewayRequest_PubRequest
	MessageRequest isGatewayRequest_MessageRequest `protobuf_oneof:"MessageRequest"`
}

func (m *GatewayRequest) Reset()                    { *m = GatewayRequest{} }
func (m *GatewayRequest) String() string            { return proto.CompactTextString(m) }
func (*GatewayRequest) ProtoMessage()               {}
func (*GatewayRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isGatewayRequest_MessageRequest interface {
	isGatewayRequest_MessageRequest()
}

type GatewayRequest_LoginRequest struct {
	LoginRequest *LoginRequest `protobuf:"bytes,1,opt,name=loginRequest,oneof"`
}
type GatewayRequest_PingpongRequest struct {
	PingpongRequest *PingpongData `protobuf:"bytes,2,opt,name=pingpongRequest,oneof"`
}
type GatewayRequest_SubRequest struct {
	SubRequest *SubRequest `protobuf:"bytes,3,opt,name=subRequest,oneof"`
}
type GatewayRequest_UnsubRequest struct {
	UnsubRequest *UnsubRequest `protobuf:"bytes,4,opt,name=unsubRequest,oneof"`
}
type GatewayRequest_PubRequest struct {
	PubRequest *PubRequest `protobuf:"bytes,5,opt,name=pubRequest,oneof"`
}

func (*GatewayRequest_LoginRequest) isGatewayRequest_MessageRequest()    {}
func (*GatewayRequest_PingpongRequest) isGatewayRequest_MessageRequest() {}
func (*GatewayRequest_SubRequest) isGatewayRequest_MessageRequest()      {}
func (*GatewayRequest_UnsubRequest) isGatewayRequest_MessageRequest()    {}
func (*GatewayRequest_PubRequest) isGatewayRequest_MessageRequest()      {}

func (m *GatewayRequest) GetMessageRequest() isGatewayRequest_MessageRequest {
	if m != nil {
		return m.MessageRequest
	}
	return nil
}

func (m *GatewayRequest) GetLoginRequest() *LoginRequest {
	if x, ok := m.GetMessageRequest().(*GatewayRequest_LoginRequest); ok {
		return x.LoginRequest
	}
	return nil
}

func (m *GatewayRequest) GetPingpongRequest() *PingpongData {
	if x, ok := m.GetMessageRequest().(*GatewayRequest_PingpongRequest); ok {
		return x.PingpongRequest
	}
	return nil
}

func (m *GatewayRequest) GetSubRequest() *SubRequest {
	if x, ok := m.GetMessageRequest().(*GatewayRequest_SubRequest); ok {
		return x.SubRequest
	}
	return nil
}

func (m *GatewayRequest) GetUnsubRequest() *UnsubRequest {
	if x, ok := m.GetMessageRequest().(*GatewayRequest_UnsubRequest); ok {
		return x.UnsubRequest
	}
	return nil
}

func (m *GatewayRequest) GetPubRequest() *PubRequest {
	if x, ok := m.GetMessageRequest().(*GatewayRequest_PubRequest); ok {
		return x.PubRequest
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GatewayRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GatewayRequest_OneofMarshaler, _GatewayRequest_OneofUnmarshaler, _GatewayRequest_OneofSizer, []interface{}{
		(*GatewayRequest_LoginRequest)(nil),
		(*GatewayRequest_PingpongRequest)(nil),
		(*GatewayRequest_SubRequest)(nil),
		(*GatewayRequest_UnsubRequest)(nil),
		(*GatewayRequest_PubRequest)(nil),
	}
}

func _GatewayRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GatewayRequest)
	// MessageRequest
	switch x := m.MessageRequest.(type) {
	case *GatewayRequest_LoginRequest:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LoginRequest); err != nil {
			return err
		}
	case *GatewayRequest_PingpongRequest:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PingpongRequest); err != nil {
			return err
		}
	case *GatewayRequest_SubRequest:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SubRequest); err != nil {
			return err
		}
	case *GatewayRequest_UnsubRequest:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UnsubRequest); err != nil {
			return err
		}
	case *GatewayRequest_PubRequest:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PubRequest); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GatewayRequest.MessageRequest has unexpected type %T", x)
	}
	return nil
}

func _GatewayRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GatewayRequest)
	switch tag {
	case 1: // MessageRequest.loginRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LoginRequest)
		err := b.DecodeMessage(msg)
		m.MessageRequest = &GatewayRequest_LoginRequest{msg}
		return true, err
	case 2: // MessageRequest.pingpongRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PingpongData)
		err := b.DecodeMessage(msg)
		m.MessageRequest = &GatewayRequest_PingpongRequest{msg}
		return true, err
	case 3: // MessageRequest.subRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SubRequest)
		err := b.DecodeMessage(msg)
		m.MessageRequest = &GatewayRequest_SubRequest{msg}
		return true, err
	case 4: // MessageRequest.unsubRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnsubRequest)
		err := b.DecodeMessage(msg)
		m.MessageRequest = &GatewayRequest_UnsubRequest{msg}
		return true, err
	case 5: // MessageRequest.pubRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PubRequest)
		err := b.DecodeMessage(msg)
		m.MessageRequest = &GatewayRequest_PubRequest{msg}
		return true, err
	default:
		return false, nil
	}
}

func _GatewayRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GatewayRequest)
	// MessageRequest
	switch x := m.MessageRequest.(type) {
	case *GatewayRequest_LoginRequest:
		s := proto.Size(x.LoginRequest)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GatewayRequest_PingpongRequest:
		s := proto.Size(x.PingpongRequest)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GatewayRequest_SubRequest:
		s := proto.Size(x.SubRequest)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GatewayRequest_UnsubRequest:
		s := proto.Size(x.UnsubRequest)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GatewayRequest_PubRequest:
		s := proto.Size(x.PubRequest)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type GatewayResponse struct {
	// Types that are valid to be assigned to MessageResponse:
	//	*GatewayResponse_LoginResponse
	//	*GatewayResponse_PingpongResponse
	//	*GatewayResponse_PubResponse
	MessageResponse isGatewayResponse_MessageResponse `protobuf_oneof:"MessageResponse"`
}

func (m *GatewayResponse) Reset()                    { *m = GatewayResponse{} }
func (m *GatewayResponse) String() string            { return proto.CompactTextString(m) }
func (*GatewayResponse) ProtoMessage()               {}
func (*GatewayResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isGatewayResponse_MessageResponse interface {
	isGatewayResponse_MessageResponse()
}

type GatewayResponse_LoginResponse struct {
	LoginResponse *LoginResponse `protobuf:"bytes,1,opt,name=loginResponse,oneof"`
}
type GatewayResponse_PingpongResponse struct {
	PingpongResponse *PingpongData `protobuf:"bytes,2,opt,name=pingpongResponse,oneof"`
}
type GatewayResponse_PubResponse struct {
	PubResponse *PubResponse `protobuf:"bytes,3,opt,name=pubResponse,oneof"`
}

func (*GatewayResponse_LoginResponse) isGatewayResponse_MessageResponse()    {}
func (*GatewayResponse_PingpongResponse) isGatewayResponse_MessageResponse() {}
func (*GatewayResponse_PubResponse) isGatewayResponse_MessageResponse()      {}

func (m *GatewayResponse) GetMessageResponse() isGatewayResponse_MessageResponse {
	if m != nil {
		return m.MessageResponse
	}
	return nil
}

func (m *GatewayResponse) GetLoginResponse() *LoginResponse {
	if x, ok := m.GetMessageResponse().(*GatewayResponse_LoginResponse); ok {
		return x.LoginResponse
	}
	return nil
}

func (m *GatewayResponse) GetPingpongResponse() *PingpongData {
	if x, ok := m.GetMessageResponse().(*GatewayResponse_PingpongResponse); ok {
		return x.PingpongResponse
	}
	return nil
}

func (m *GatewayResponse) GetPubResponse() *PubResponse {
	if x, ok := m.GetMessageResponse().(*GatewayResponse_PubResponse); ok {
		return x.PubResponse
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GatewayResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GatewayResponse_OneofMarshaler, _GatewayResponse_OneofUnmarshaler, _GatewayResponse_OneofSizer, []interface{}{
		(*GatewayResponse_LoginResponse)(nil),
		(*GatewayResponse_PingpongResponse)(nil),
		(*GatewayResponse_PubResponse)(nil),
	}
}

func _GatewayResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GatewayResponse)
	// MessageResponse
	switch x := m.MessageResponse.(type) {
	case *GatewayResponse_LoginResponse:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LoginResponse); err != nil {
			return err
		}
	case *GatewayResponse_PingpongResponse:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PingpongResponse); err != nil {
			return err
		}
	case *GatewayResponse_PubResponse:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PubResponse); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GatewayResponse.MessageResponse has unexpected type %T", x)
	}
	return nil
}

func _GatewayResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GatewayResponse)
	switch tag {
	case 1: // MessageResponse.loginResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LoginResponse)
		err := b.DecodeMessage(msg)
		m.MessageResponse = &GatewayResponse_LoginResponse{msg}
		return true, err
	case 2: // MessageResponse.pingpongResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PingpongData)
		err := b.DecodeMessage(msg)
		m.MessageResponse = &GatewayResponse_PingpongResponse{msg}
		return true, err
	case 3: // MessageResponse.pubResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PubResponse)
		err := b.DecodeMessage(msg)
		m.MessageResponse = &GatewayResponse_PubResponse{msg}
		return true, err
	default:
		return false, nil
	}
}

func _GatewayResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GatewayResponse)
	// MessageResponse
	switch x := m.MessageResponse.(type) {
	case *GatewayResponse_LoginResponse:
		s := proto.Size(x.LoginResponse)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GatewayResponse_PingpongResponse:
		s := proto.Size(x.PingpongResponse)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GatewayResponse_PubResponse:
		s := proto.Size(x.PubResponse)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// login
type LoginRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LoginRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginResponse struct {
	Status LoginResponse_Status `protobuf:"varint,1,opt,name=status,enum=gatewaypb.LoginResponse_Status" json:"status,omitempty"`
}

func (m *LoginResponse) Reset()                    { *m = LoginResponse{} }
func (m *LoginResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()               {}
func (*LoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *LoginResponse) GetStatus() LoginResponse_Status {
	if m != nil {
		return m.Status
	}
	return LoginResponse_SUCCESS
}

// pingpong
type PingpongData struct {
	Size int32  `protobuf:"varint,1,opt,name=size" json:"size,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *PingpongData) Reset()                    { *m = PingpongData{} }
func (m *PingpongData) String() string            { return proto.CompactTextString(m) }
func (*PingpongData) ProtoMessage()               {}
func (*PingpongData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PingpongData) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *PingpongData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// pubsub
type SubRequest struct {
	Topic string `protobuf:"bytes,1,opt,name=topic" json:"topic,omitempty"`
}

func (m *SubRequest) Reset()                    { *m = SubRequest{} }
func (m *SubRequest) String() string            { return proto.CompactTextString(m) }
func (*SubRequest) ProtoMessage()               {}
func (*SubRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *SubRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

type UnsubRequest struct {
	Topic string `protobuf:"bytes,1,opt,name=topic" json:"topic,omitempty"`
}

func (m *UnsubRequest) Reset()                    { *m = UnsubRequest{} }
func (m *UnsubRequest) String() string            { return proto.CompactTextString(m) }
func (*UnsubRequest) ProtoMessage()               {}
func (*UnsubRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UnsubRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

type PubRequest struct {
	Topic   string `protobuf:"bytes,1,opt,name=topic" json:"topic,omitempty"`
	Content []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (m *PubRequest) Reset()                    { *m = PubRequest{} }
func (m *PubRequest) String() string            { return proto.CompactTextString(m) }
func (*PubRequest) ProtoMessage()               {}
func (*PubRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *PubRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *PubRequest) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type PubResponse struct {
	Topic string              `protobuf:"bytes,1,opt,name=topic" json:"topic,omitempty"`
	Datas []*PubResponse_Data `protobuf:"bytes,2,rep,name=datas" json:"datas,omitempty"`
}

func (m *PubResponse) Reset()                    { *m = PubResponse{} }
func (m *PubResponse) String() string            { return proto.CompactTextString(m) }
func (*PubResponse) ProtoMessage()               {}
func (*PubResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *PubResponse) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *PubResponse) GetDatas() []*PubResponse_Data {
	if m != nil {
		return m.Datas
	}
	return nil
}

type PubResponse_Data struct {
	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	PubTime uint64 `protobuf:"varint,2,opt,name=pubTime" json:"pubTime,omitempty"`
}

func (m *PubResponse_Data) Reset()                    { *m = PubResponse_Data{} }
func (m *PubResponse_Data) String() string            { return proto.CompactTextString(m) }
func (*PubResponse_Data) ProtoMessage()               {}
func (*PubResponse_Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8, 0} }

func (m *PubResponse_Data) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *PubResponse_Data) GetPubTime() uint64 {
	if m != nil {
		return m.PubTime
	}
	return 0
}

func init() {
	proto.RegisterType((*GatewayRequest)(nil), "gatewaypb.GatewayRequest")
	proto.RegisterType((*GatewayResponse)(nil), "gatewaypb.GatewayResponse")
	proto.RegisterType((*LoginRequest)(nil), "gatewaypb.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "gatewaypb.LoginResponse")
	proto.RegisterType((*PingpongData)(nil), "gatewaypb.PingpongData")
	proto.RegisterType((*SubRequest)(nil), "gatewaypb.SubRequest")
	proto.RegisterType((*UnsubRequest)(nil), "gatewaypb.UnsubRequest")
	proto.RegisterType((*PubRequest)(nil), "gatewaypb.PubRequest")
	proto.RegisterType((*PubResponse)(nil), "gatewaypb.PubResponse")
	proto.RegisterType((*PubResponse_Data)(nil), "gatewaypb.PubResponse.Data")
	proto.RegisterEnum("gatewaypb.LoginResponse_Status", LoginResponse_Status_name, LoginResponse_Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GatewayService service

type GatewayServiceClient interface {
	Serve(ctx context.Context, opts ...grpc.CallOption) (GatewayService_ServeClient, error)
}

type gatewayServiceClient struct {
	cc *grpc.ClientConn
}

func NewGatewayServiceClient(cc *grpc.ClientConn) GatewayServiceClient {
	return &gatewayServiceClient{cc}
}

func (c *gatewayServiceClient) Serve(ctx context.Context, opts ...grpc.CallOption) (GatewayService_ServeClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_GatewayService_serviceDesc.Streams[0], c.cc, "/gatewaypb.GatewayService/Serve", opts...)
	if err != nil {
		return nil, err
	}
	x := &gatewayServiceServeClient{stream}
	return x, nil
}

type GatewayService_ServeClient interface {
	Send(*GatewayRequest) error
	Recv() (*GatewayResponse, error)
	grpc.ClientStream
}

type gatewayServiceServeClient struct {
	grpc.ClientStream
}

func (x *gatewayServiceServeClient) Send(m *GatewayRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *gatewayServiceServeClient) Recv() (*GatewayResponse, error) {
	m := new(GatewayResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for GatewayService service

type GatewayServiceServer interface {
	Serve(GatewayService_ServeServer) error
}

func RegisterGatewayServiceServer(s *grpc.Server, srv GatewayServiceServer) {
	s.RegisterService(&_GatewayService_serviceDesc, srv)
}

func _GatewayService_Serve_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GatewayServiceServer).Serve(&gatewayServiceServeServer{stream})
}

type GatewayService_ServeServer interface {
	Send(*GatewayResponse) error
	Recv() (*GatewayRequest, error)
	grpc.ServerStream
}

type gatewayServiceServeServer struct {
	grpc.ServerStream
}

func (x *gatewayServiceServeServer) Send(m *GatewayResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *gatewayServiceServeServer) Recv() (*GatewayRequest, error) {
	m := new(GatewayRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _GatewayService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gatewaypb.GatewayService",
	HandlerType: (*GatewayServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Serve",
			Handler:       _GatewayService_Serve_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "gateway.proto",
}

func init() { proto.RegisterFile("gateway.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 563 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x54, 0xdd, 0x8e, 0xd2, 0x40,
	0x14, 0x6e, 0x59, 0x60, 0xe5, 0xf0, 0xeb, 0xc9, 0xaa, 0x15, 0x4d, 0xdc, 0x34, 0x5e, 0x70, 0x45,
	0x14, 0x13, 0x37, 0xd9, 0x68, 0x22, 0x5b, 0x50, 0x48, 0x16, 0x16, 0xa7, 0xb0, 0xc6, 0x2b, 0x32,
	0xb0, 0x13, 0xd2, 0xc4, 0x6d, 0x2b, 0xd3, 0xba, 0xd1, 0xc7, 0xf0, 0x35, 0x7c, 0x20, 0x9f, 0xc1,
	0xb7, 0x30, 0x9d, 0x19, 0xca, 0x74, 0x59, 0xb2, 0x77, 0xfd, 0xce, 0xf9, 0xbe, 0xf3, 0xf3, 0xf5,
	0x64, 0xa0, 0xba, 0xa2, 0x11, 0xbb, 0xa1, 0x3f, 0xdb, 0xe1, 0x3a, 0x88, 0x02, 0x2c, 0x29, 0x18,
	0x2e, 0xec, 0xbf, 0x39, 0xa8, 0x7d, 0x92, 0x88, 0xb0, 0xef, 0x31, 0xe3, 0x11, 0xbe, 0x87, 0xca,
	0xb7, 0x60, 0xe5, 0xf9, 0x0a, 0x5b, 0xe6, 0xb1, 0xd9, 0x2a, 0x77, 0x9e, 0xb4, 0x53, 0x51, 0xfb,
	0x5c, 0x4b, 0x0f, 0x0c, 0x92, 0xa1, 0xa3, 0x03, 0xf5, 0xd0, 0xf3, 0x57, 0x61, 0xe0, 0xaf, 0x36,
	0x15, 0x72, 0x3b, 0x15, 0x26, 0x8a, 0xd1, 0xa3, 0x11, 0x1d, 0x18, 0xe4, 0xb6, 0x02, 0x4f, 0x00,
	0x78, 0xbc, 0xd8, 0xe8, 0x0f, 0x84, 0xfe, 0x91, 0xa6, 0x77, 0xd3, 0xe4, 0xc0, 0x20, 0x1a, 0x35,
	0x19, 0x3e, 0xf6, 0x35, 0x69, 0x7e, 0xa7, 0xf5, 0x4c, 0x4b, 0x27, 0xc3, 0xeb, 0xf4, 0xa4, 0x6f,
	0xb8, 0x15, 0x17, 0x76, 0xfa, 0x4e, 0x32, 0x7d, 0xb7, 0xd4, 0xb3, 0x06, 0xd4, 0x46, 0x8c, 0x73,
	0xba, 0x62, 0x2a, 0x62, 0xff, 0x33, 0xa1, 0x9e, 0x3a, 0xcb, 0xc3, 0xc0, 0xe7, 0x0c, 0x3f, 0x40,
	0x55, 0x79, 0x25, 0x03, 0xca, 0x5b, 0x6b, 0xd7, 0x5b, 0x99, 0x1f, 0x18, 0x24, 0x2b, 0xc0, 0x3e,
	0x34, 0xb6, 0x5e, 0xa9, 0x22, 0xf7, 0xda, 0xbb, 0x23, 0xc1, 0x53, 0x28, 0x8b, 0xe1, 0x55, 0x05,
	0x69, 0xf0, 0xe3, 0xdb, 0x8b, 0xa6, 0x43, 0xe8, 0xe4, 0xb3, 0x87, 0x50, 0x4f, 0x57, 0x95, 0x21,
	0xfb, 0x23, 0x54, 0xf4, 0x9b, 0xc0, 0x26, 0x3c, 0x88, 0x39, 0x5b, 0xfb, 0xf4, 0x5a, 0xae, 0x58,
	0x22, 0x29, 0x4e, 0x72, 0x21, 0xe5, 0xfc, 0x26, 0x58, 0x5f, 0x89, 0xc9, 0x4b, 0x24, 0xc5, 0xf6,
	0x1f, 0x13, 0xaa, 0x19, 0x03, 0xf0, 0x04, 0x8a, 0x3c, 0xa2, 0x51, 0xcc, 0x45, 0x9d, 0x5a, 0xe7,
	0xc5, 0x3e, 0xab, 0xda, 0xae, 0xa0, 0x11, 0x45, 0xb7, 0x29, 0x14, 0x65, 0x04, 0xcb, 0x70, 0xe8,
	0xce, 0x1c, 0xa7, 0xef, 0xba, 0x0d, 0x03, 0x9f, 0x83, 0x35, 0x1c, 0x3b, 0x17, 0x84, 0xf4, 0x9d,
	0xe9, 0xbc, 0xeb, 0x38, 0x17, 0xb3, 0xf1, 0x74, 0x3e, 0xe9, 0xba, 0xee, 0x97, 0x5e, 0xc3, 0x44,
	0x0b, 0x8e, 0xba, 0xb3, 0xe9, 0x60, 0xee, 0xf6, 0xc9, 0x65, 0x9f, 0xcc, 0x47, 0xdd, 0xe1, 0x78,
	0xda, 0x1d, 0x8e, 0x1b, 0x39, 0x44, 0xa8, 0x8d, 0xbe, 0xba, 0x9f, 0xcf, 0xb7, 0xb1, 0x03, 0xfb,
	0x2d, 0x54, 0x74, 0xa3, 0x11, 0x21, 0xcf, 0xbd, 0x5f, 0x72, 0xe3, 0x02, 0x11, 0xdf, 0x49, 0xec,
	0x8a, 0x46, 0x54, 0x6c, 0x5a, 0x21, 0xe2, 0xdb, 0xb6, 0x01, 0xb6, 0xf7, 0x8b, 0x47, 0x50, 0x88,
	0x82, 0xd0, 0x5b, 0x2a, 0xa3, 0x24, 0xb0, 0x5f, 0x42, 0x45, 0x3f, 0xd4, 0x3d, 0xac, 0x77, 0x00,
	0x93, 0x7b, 0x38, 0x68, 0xc1, 0xe1, 0x32, 0xf0, 0x23, 0xe6, 0x47, 0x6a, 0x88, 0x0d, 0xb4, 0x7f,
	0x9b, 0x50, 0xd6, 0xfe, 0xf3, 0x1e, 0xfd, 0x6b, 0x28, 0x24, 0x53, 0x73, 0x2b, 0x77, 0x7c, 0xd0,
	0x2a, 0x77, 0x9e, 0xdd, 0x7d, 0x24, 0xed, 0xc4, 0x01, 0x22, 0x99, 0xcd, 0x53, 0xc8, 0x0b, 0x43,
	0xb4, 0xd6, 0x66, 0xa6, 0x75, 0x92, 0x09, 0xe3, 0xc5, 0xd4, 0xbb, 0x96, 0xd7, 0x9b, 0x27, 0x1b,
	0xd8, 0xb9, 0x4c, 0xdf, 0x23, 0x97, 0xad, 0x7f, 0x78, 0x4b, 0x86, 0x3d, 0x28, 0x24, 0x9f, 0x0c,
	0x9f, 0x6a, 0xad, 0xb3, 0x6f, 0x56, 0xb3, 0x79, 0x57, 0x4a, 0x1d, 0xa7, 0xd1, 0x32, 0x5f, 0x99,
	0x8b, 0xa2, 0x78, 0xfa, 0xde, 0xfc, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x36, 0xec, 0x83, 0xee, 0x0b,
	0x05, 0x00, 0x00,
}
